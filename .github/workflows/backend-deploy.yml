name: Backend Deployment

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths: 
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: dartverein_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Wait for MySQL
      run: |
        until mysqladmin ping -h"127.0.0.1" -P3306 -utest_user -ptest_password --silent; do
          echo 'waiting for mysql...'
          sleep 1
        done
    
    - name: Run tests
      working-directory: ./backend
      run: mvn test
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/dartverein_test
        SPRING_DATASOURCE_USERNAME: test_user
        SPRING_DATASOURCE_PASSWORD: test_password

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build application
      working-directory: ./backend
      run: mvn clean package -DskipTests
    
    - name: Build Docker image
      working-directory: ./backend
      run: |
        docker build -t dartverein-backend:${{ github.sha }} .
        docker tag dartverein-backend:${{ github.sha }} dartverein-backend:latest
    
    - name: Save Docker image
      run: docker save dartverein-backend:latest | gzip > dartverein-backend.tar.gz
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          # Stop existing container
          docker stop dartverein-backend || true
          docker rm dartverein-backend || true
          
          # Remove old images
          docker image prune -f
          
          # Pull latest code
          cd /opt/dartverein
          git pull origin main
          
          # Build new image
          cd backend
          docker build -t dartverein-backend:latest .
          
          # Start new container
          docker run -d \
            --name dartverein-backend \
            --restart unless-stopped \
            -p 8081:8081 \
            -e SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/dartverein \
            -e SPRING_DATASOURCE_USERNAME=dartverein_user \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
            -e SPRING_SQL_INIT_MODE=never \
            dartverein-backend:latest
          
          # Clean up
          docker image prune -f